{"version":3,"sources":["components/SearchSeason.js","components/RaceItem.js","components/DisplayRaces.js","components/Winner.js","components/SecondPlace.js","components/ThirdPlace.js","components/GetRaceResults.js","components/App.js","index.js"],"names":["SearchSeason","state","season","change","onInputChange","event","setState","target","value","handleSubmit","preventDefault","props","getSeason","className","onSubmit","this","type","placeholder","onChange","React","Component","RaceItem","race","href","url","rel","raceName","DisplayRaces","racesList","races","map","key","round","Winner","driver","givenName","familyName","code","SecondPlace","ThirdPlace","GetRaceResults","results","console","log","listOfWinners","result","data","MRData","RaceTable","Races","Results","Driver","listOfSecond","listOfThird","App","a","axios","get","response1","responses","i","length","response","push","error","style","display","justifyContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.894d9072.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass SearchSeason extends React.Component {\n    state = { season: '', change: null }\n\n    onInputChange = (event) => {\n        this.setState({ season: event.target.value })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.setState({change: true})\n        this.props.getSeason(this.state.season, this.state.change)\n    }\n\n    render() {\n        return (\n            <div className=\"search-bar ui segment\">\n                <form onSubmit={this.handleSubmit} className=\"ui form\">\n                        <div className=\"field\">\n                            <label>Season</label>\n                            <input \n                                type=\"text\" \n                                placeholder=\"Year\" \n                                value={this.state.season}\n                                onChange={this.onInputChange}\n                            />\n                        </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SearchSeason","import './itemHeight.css'\nimport React from 'react';\n\nconst RaceItem = ({race}) => {\n    return (\n        <div className=\" height1 item\">\n            <div className=\"content\">\n            <a href={race.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"header\">{race.raceName}</a>\n            </div>\n        </div>\n    )\n}\n\nexport default RaceItem;","import React from 'react';\nimport RaceItem from './RaceItem'\n\n\nconst DisplayRaces = ({races}) => {\n    const racesList = races.map(race => {\n        return  <RaceItem race={race} key={race.round} />\n    })\n    \n    return <div className=\"ui relaxed divided list\">{racesList}</div>\n}\n\nexport default DisplayRaces;","import './itemHeight.css'\nimport React from 'react';\n\nconst Winner = ({driver}) => {\n    return(\n        <div className=\"height1 item\">\n            <div className=\"content\">\n              <a href={driver.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"header\">{`Winner: ${driver.givenName} ${driver.familyName}`}</a>\n              <div className=\"description\">{`code: ${driver.code}`}</div>  \n            </div>\n        </div>\n        \n    )\n}\n\nexport default Winner","import './itemHeight.css'\nimport React from 'react';\n\nconst SecondPlace = ({driver}) => {\n    return(\n        <div className=\"height1 item\">\n            <div className=\"content\">\n              <a href={driver.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"header\">{`Second Place: ${driver.givenName} ${driver.familyName}`}</a>\n              <div className=\"description\">{`code: ${driver.code}`}</div>  \n            </div>\n        </div>\n        \n    )\n}\n\nexport default SecondPlace","import './itemHeight.css'\nimport React from 'react';\n\nconst ThirdPlace = ({driver}) => {\n    return(\n        <div className=\"height1 item\">\n            <div className=\"content\">\n              <a href={driver.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"header\">{`Third Place: ${driver.givenName} ${driver.familyName}`}</a>\n              <div className=\"description\">{`code: ${driver.code}`}</div>  \n            </div>\n        </div>\n        \n    )\n}\n\nexport default ThirdPlace","import React from 'react';\nimport Winner from './Winner';\nimport SecondPlace from './SecondPlace';\nimport ThirdPlace from './ThirdPlace';\n\n\nconst GetRaceResults = ({results, change, races}) => {\n\n    if(change === null){\n        console.log(change)\n        return <div>Enter a Season Year</div>\n    } \n    if(change === true){\n        console.log(races)\n        return <div>Loading...</div>\n    } \n    const listOfWinners = results.map(result =>{\n        return <Winner driver={result.data.MRData.RaceTable.Races[0].Results[0].Driver} />\n    })\n    const listOfSecond = results.map(result =>{\n        return <SecondPlace driver={result.data.MRData.RaceTable.Races[0].Results[1].Driver} />\n    })\n    const listOfThird = results.map(result =>{\n        return <ThirdPlace driver={result.data.MRData.RaceTable.Races[0].Results[2].Driver} />\n    })\n    \n    return (\n    \n        <div className=\"ui grid\">\n        <div className=\"row\">\n            <div className=\"five wide column ui relaxed divided list\">\n            {listOfWinners}\n            </div>\n            <div className=\"five wide column ui relaxed divided list\">\n            {listOfSecond}\n            </div>\n            <div className=\"five wide column ui relaxed divided list\">\n            {listOfThird}\n            </div>\n        </div>\n        </div>\n        \n    )\n            \n}\n\nexport default GetRaceResults","import './itemHeight.css';\nimport React from 'react';\nimport SearchSeason from './SearchSeason';\nimport DisplayRaces from './DisplayRaces';\nimport GetRaceResults from './GetRaceResults'\nimport axios from 'axios';\n\nclass App extends React.Component{\n    state = { results: [], races: [], change:null }\n\n    getSeason = async (season, change) => {\n        try {\n            this.setState({change: change})\n            const response1 = await axios.get(`https://ergast.com/api/f1/${season}/results/1.json`);\n            this.setState({races: response1.data.MRData.RaceTable.Races})\n            console.log(response1)\n            const responses = []\n            for(let i = 1; i<=this.state.races.length; i++){\n                const response = await axios.get(`https://ergast.com/api/f1/${season}/${i}/results.json`);\n                responses.push(response)\n            }\n            this.setState({results: responses})\n            this.setState({change: false})\n            \n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"ui container top-bar\">\n                <SearchSeason getSeason={this.getSeason}/>\n                <div className=\"content ui container\">\n                <div className=\"ui grid\" style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <DisplayRaces className=\"two wide column\" races={this.state.races} />\n                    <GetRaceResults className=\"fourteen wide column\" results={this.state.results} change={this.state.change} races={this.state.races}/>\n                </div>\n                </div>    \n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}